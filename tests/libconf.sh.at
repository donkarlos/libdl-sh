dnl								-*-Autotest-*-
dnl libconf.sh.at		- libconf.sh tests
dnl
dnl Copyright Â© 2021 Das Computerlabor (DCl-M)
dnl
dnl This library is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU Lesser General Public License
dnl as published by the Free Software Foundation; either
dnl version 2.1 of the License, or (at your option) any later version.
dnl
dnl This library is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this library; if not, write to the Free Software Founda-
dnl tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
dnl
dnl AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
dnl
dnl WRITTEN BY:	ks	2021-05-14
dnl CHANGED BY:	ks	2021-05-20	dl_warn(): Suppress warnings for pre-
dnl					releases.
dnl					Add test group [libconf.sh functions
dnl					are propely withdrawn?].
dnl		ks	2021-05-21	Add test group [libconf.sh functions
dnl					are propely deprecated?].
dnl		ks	2021-05-23	Simplify embedded dl_warn(),
dnl					atlocal_function_deprecated(), and
dnl					atlocal_function_withdrawn().
dnl		ks	2021-05-24	Use atlocal_check_meta_inquiries(),
dnl					atlocal_trace_invocation_set_output(),
dnl					atlocal_trace_invocation_raw_output(),
dnl					atlocal_check_constants(), and
dnl					atlocal_check_function_usage_errors().
dnl
dnl Test group 'GIT-style configuration file processing library libconf.sh'
dnl
AT_BANNER([GIT-style configuration file processing library libconf.sh])

dnl
dnl Check if 'dl_load conf' loads libconf.sh
dnl
AT_SETUP(['dl_load conf' loads libconf.sh?])
AT_KEYWORDS([libconf.sh libconf dl_load])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
test_atload_trace=:			## Initialize load-time hook's trace.
test_atload() {				## Declare load-time hook.
    test_atload_trace=:$1$test_atload_trace
}

test_atexit() {				## Declare exit-time hook.
    echo "test_atexit($status)"
    echo "$test_atload_trace"
}

case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"			## Load libdl.sh or die.
dl_atload test_atload && dl_atexit test_atexit
dl_load conf				## Register hooks and load
					## libconf.sh.
], 0, [dnl				## And the winner is...
test_atexit(0)
:conf:dl:
], [dnl
])
AT_CLEANUP

dnl
dnl Check if conf_meta() inquiries
dnl   -	get package
dnl   -	get version
dnl   -	get api
dnl   -	get apis
dnl   -	get apis api
dnl   -	get apis full
dnl   -	get apis list
dnl   -	get apis r/o
dnl produce expected results.
dnl
dnl NOTE:   (1)	This is just a wrapper around atlocal_check_meta_inquiries()!
dnl	    (2)	The double brackets within the expected output provide "just
dnl		the right amount" of m4(1) quoting.
dnl
AT_SETUP(['conf_meta get' inquiries give expected results?])
AT_KEYWORDS([libconf.sh libconf conf_meta])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
atlocal_check_meta_inquiries conf	## Perform check for libconf.sh.
], 0, [dnl				## And the winner is...
conf_meta([[2]]get,package)=0
libdl-sh
conf_meta([[2]]get,version)=0
0.4~7
conf_meta([[2]]get,api)=1
conf_meta([[2]]get,apis)=0
1
2
conf_meta([[3]]get,apis,api)=0
1
2
conf_meta([[3]]get,apis,full)=0
-;conf_meta(META [[ARG ...]]);2-4
1;conf_meta(META [[ARG ...]]);2-4
1;conf_exec(CFPN ...);1-
1;conf_has(ITEM[[=VALUE]] CFPN ...);2-
1;conf_get(ITEM[[=VALUE]] CFPN ...);2-
1;conf_put(ITEM[[=VALUE]] CFPN ...);2-
1;conf_getenv(VARIABLE ITEM[[=VALUE]] CFPN ...);3-
2;conf_meta(META [[ARG ...]]);2-4
2;conf_exec(CFPN ...);1-
2;conf_has(ITEM[[=VALUE]] CFPN ...);2-
2;conf_get(ITEM[[=VALUE]] CFPN ...);2-
2;conf_put(ITEM[[=VALUE]] CFPN ...);2-
conf_meta([[3]]get,apis,list)=0
-;conf_meta;2-4
1;conf_meta;2-4
1;conf_exec;1-
1;conf_has;2-
1;conf_get;2-
1;conf_put;2-
1;conf_getenv;3-
2;conf_meta;2-4
2;conf_exec;1-
2;conf_has;2-
2;conf_get;2-
2;conf_put;2-
conf_meta([[3]]get,apis,r/o)=0
], [dnl
])
AT_CLEANUP

dnl
dnl Check if conf_meta() inquiries
dnl   -	get apis full
dnl   -	get apis list
dnl hounour (i.e., apply) the extra sed(1) expression passed as 4th argument.
dnl
dnl NOTE:   (1)	The double brackets within the expected output provide "just
dnl		the right amount" of m4(1) quoting.
dnl	    (2)	The expected output contains one quadrigraph to account for
dnl		the unmatched '(' in "full" format's sed(1) expression!
dnl
AT_SETUP(['conf_meta get apis' honours 4th argument?])
AT_KEYWORDS([libconf.sh libconf conf_meta])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
lib=conf; get="${lib}_meta get" status=0
					## Assume success.
{
    for format in full list; do		## Yes, foreach format do...
	    case $format in
	    full)	sx='/;'"$lib"'_getenv(/!d;s/;.*$//'	;;
	    list)	sx='/;'"$lib"'_getenv;/!d;s/;.*$//'	;;
	esac
	atlocal_trace_invocation_raw_output $get apis $format "$sx" || status=1
    done				## Trace invocation and result.
} || status=1; exit $status		## Indicate success or failure.
], 0, [dnl				## And the winner is...
conf_meta([[4]]get,apis,full,/;conf_getenv@{:@/!d;s/;.*$//)=0
1
conf_meta([[4]]get,apis,list,/;conf_getenv;/!d;s/;.*$//)=0
1
], [dnl
])
AT_CLEANUP

dnl
dnl Check if the constants reported by 'conf_meta get apis r/o' (for the
dnl default API version) are defined and readonly after loading libconf.sh.
dnl
dnl NOTE:   (1)	This is just a wrapper around atlocal_check_constants()!
dnl	    (2)	The double brackets within the expected output provide "just
dnl		the right amount" of m4(1) quoting.
dnl
AT_SETUP(['conf_meta get apis r/o' var.s set and readonly?])
AT_KEYWORDS([libconf.sh libconf conf_meta constants readonly])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
atlocal_check_constants conf		## Perform check for libconf.sh.
], 1, [dnl				## And the winner is...
conf_meta([[2]]get,api)=1=>
], [dnl
])
AT_CLEANUP

dnl
dnl Check if libconf.sh functions are properly deprecated.
dnl
AT_SETUP([libconf.sh functions are propely deprecated?])
AT_KEYWORDS([libconf.sh libconf deprecated])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
lib=conf; status=0			## Assume success.
atlocal_function_deprecated $lib 1 ${lib}_getenv lib core.lib /dev/null || status=1
exit $status				## Indicate success or failure.
], 0, [dnl				## And the winner is...
conf_meta([[3]]set,api,1)=0
conf_getenv([[3]]lib,core.lib,/dev/null)=126
], [dnl
])
AT_CLEANUP

dnl
dnl Check if libconf.sh functions are properly withdrawn.
dnl
AT_SETUP([libconf.sh functions are propely withdrawn?])
AT_KEYWORDS([libconf.sh libconf withdrawn])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
lib=conf; status=0			## Assume success.
atlocal_function_withdrawn $lib 2 ${lib}_getenv lib core.lib /dev/null || status=1
exit $status				## Indicate success or failure.
], 0, [dnl				## And the winner is...
conf_meta([[3]]set,api,2)=0
conf_getenv([[3]]lib,core.lib,/dev/null)=127
], [dnl
])
AT_CLEANUP

dnl
dnl Check if the functions reported by 'conf_meta get apis list' (for all
dnl API versions) indicate usage errors (i.e., return 2) when invoked with
dnl insufficient arguments.
dnl
dnl NOTE:   (1)	This is just a wrapper around atlocal_check_function_usage_-
dnl		errors()!
dnl	    (2)	The double brackets within the expected output provide "just
dnl		the right amount" of m4(1) quoting.
dnl
AT_SETUP([libconf.sh functions indicate usage errors?])
AT_KEYWORDS([libconf.sh libconf usage])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure 'set -u' resilience.
case :$PATH: in				## Triggered by 'check-local:'?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load conf	## Load libdl.sh and libconf.sh or die.
atlocal_check_function_usage_errors conf
					## Perform check for libconf.sh.
], 0, [dnl				## And the winner is...
conf_meta([[3]]set,api,1)=0
conf_meta([[0]])=2
conf_meta([[1]]1)=2
conf_exec([[0]])=2
conf_has([[0]])=2
conf_has([[1]]1)=2
conf_get([[0]])=2
conf_get([[1]]1)=2
conf_put([[0]])=2
conf_put([[1]]1)=2
conf_getenv([[0]])=2
conf_getenv([[1]]1)=2
conf_getenv([[2]]1,2)=2
conf_meta([[3]]set,api,2)=0
conf_meta([[0]])=2
conf_meta([[1]]1)=2
conf_exec([[0]])=2
conf_has([[0]])=2
conf_has([[1]]1)=2
conf_get([[0]])=2
conf_get([[1]]1)=2
conf_put([[0]])=2
conf_put([[1]]1)=2
], [dnl
])
AT_CLEANUP
