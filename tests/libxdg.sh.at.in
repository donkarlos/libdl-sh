dnl								-*-Autotest-*-
dnl libxdg.sh.at		- libxdg.sh tests
dnl
dnl Copyright © 2021-2022 Das Computerlabor (DCl-M)
dnl
dnl This library is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU Lesser General Public License
dnl as published by the Free Software Foundation; either
dnl version 2.1 of the License, or (at your option) any later version.
dnl
dnl This library is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl Lesser General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this library; if not, write to the Free Software Founda-
dnl tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
dnl
dnl AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
dnl
dnl WRITTEN BY:	ks	2021-06-01
dnl CHANGED BY:	ks	2022-05-08	Make LIB_meta() tests AC_INIT()-inde-
dnl					pendent.
dnl
dnl Test group »XDG base directory library libxdg.sh«
dnl
AT_BANNER([XDG base directory library libxdg.sh])

dnl
dnl Check if »dl_load xdg« loads libxdg.sh
dnl
AT_SETUP([»dl_load xdg« loads libxdg.sh?])
AT_KEYWORDS([libxdg.sh libxdg dl_load])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
test_atload_trace=:			## Initialize load-time hook's trace.
test_atload() {				## Declare load-time hook.
    test_atload_trace=:$1$test_atload_trace
}

test_atexit() {				## Declare exit-time hook.
    echo "test_atexit($status)"
    echo "$test_atload_trace"
}

case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"			## Load libdl.sh or die.
dl_atload test_atload && dl_atexit test_atexit
dl_load xdg				## Register hooks and load
					## libxdg.sh.
], 0, [dnl				## And the winner is…
test_atexit(0)
:xdg:dl:
], [dnl
])
AT_CLEANUP

dnl
dnl Check if xdg_meta() inquiries
dnl   -	get package
dnl   -	get version
dnl   -	get api
dnl   -	get apis
dnl   -	get apis api
dnl   -	get apis full
dnl   -	get apis list
dnl   -	get apis r/o
dnl produce expected results.
dnl
dnl NOTE:   (1)	This test wraps around atlocal_check_meta_inquiries()!
dnl	    (2)	The double brackets within the expected output provide “just
dnl		the right amount” of m4(1) quoting.
dnl
AT_SETUP([»xdg_meta get« inquiries give expected results?])
AT_KEYWORDS([libxdg.sh libxdg xdg_meta])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load xdg	## Load libdl.sh and libxdg.sh or die.
atlocal_check_meta_inquiries xdg	## Perform check for libxdg.sh.
], 0, [dnl				## And the winner is…
xdg_meta([[2]]get,package)=0
@PACKAGE_TARNAME@
xdg_meta([[2]]get,version)=0
@PACKAGE_VERSION@
xdg_meta([[2]]get,api)=0
0
xdg_meta([[2]]get,apis)=0
0
xdg_meta([[3]]get,apis,api)=0
0
xdg_meta([[3]]get,apis,full)=0
0;xdg_meta(META [[ARG …]]);2-4
0;xdg_regular(&NAME VALUE);2
xdg_meta([[3]]get,apis,list)=0
0;xdg_meta;2-4
0;xdg_regular;2
xdg_meta([[3]]get,apis,r/o)=0
], [dnl
])
AT_CLEANUP

dnl
dnl Check if the API version and function declarations reported by »xdg_meta
dnl get apis all« are consistent and that the reported functions are properly
dnl deprecated/withdrawn.
dnl
dnl NOTE:   (1)	The double brackets within the expected output provide “just
dnl		the right amount” of m4(1) quoting.
dnl
AT_SETUP([»xdg_meta get apis all« declarations sane?])
AT_KEYWORDS([libxdg.sh libxdg xdg_meta consistent deprecated withdrawn])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
test_hook() {				## (TESTER LIB API TESTEE)
    case ${5+5}${4+=$4} in		## Usage OK?/Function?
	=${2-}|=${2-}_*)		## Y/Any recently deprecated/withdrawn:
	    echo "$4() deprecated or withdrawn!" >&2
	    ;;				## Emit unexpected error message!
	*)  return 2			## N/?: Indicate abuse!
	    ;;
    esac
}

case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load xdg	## Load libdl.sh and libxdg.sh or die.
atlocal_check_api_consistency xdg test_hook
					## Perform check for libxdg.sh.
], 0, [dnl				## And the winner is…
Declared API versions: [[0;0]]
], [dnl
])
AT_CLEANUP

dnl
dnl Check if xdg_meta() inquiries
dnl   -	get apis full
dnl   -	get apis list
dnl   -	get apis r/o
dnl hounour (i.e., apply) the extra sed(1) expression passed as 4th argument.
dnl
dnl NOTE:   (1)	This test wraps around atlocal_check_meta_get_apis_honours_-
dnl		4th()!
dnl	    (2)	The double brackets within the expected output provide “just
dnl		the right amount” of m4(1) quoting.
dnl	    (3)	The expected output contains one quadrigraph to account for
dnl		the unmatched »(« in »full« format's sed(1) expression!
dnl
AT_SETUP([»xdg_meta get apis« honours 4th argument?])
AT_KEYWORDS([libxdg.sh libxdg xdg_meta])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load xdg	## Load libdl.sh and libxdg.sh or die.
atlocal_check_meta_get_apis_honours_4th xdg xdg_regular
					## Perform check for libxdg.sh.
], 0, [dnl				## And the winner is…
xdg_meta([[4]]get,apis,full,/;xdg_regular@{:@/!d;s/;.*$//)=0
0
xdg_meta([[4]]get,apis,list,/;xdg_regular;/!d;s/;.*$//)=0
0
xdg_meta([[4]]get,apis,r/o,/^xdg_/!d;s///)=0
], [dnl
])
AT_CLEANUP

dnl
dnl Check if the constants reported by 'xdg_meta get apis r/o (for the
dnl default API version) are defined and readonly after loading libxdg.sh.
dnl
dnl NOTE:   (1)	This test wraps around atlocal_check_constants()!
dnl	    (2)	The double brackets within the expected output provide “just
dnl		the right amount” of m4(1) quoting.
dnl
AT_SETUP([»xdg_meta get apis r/o« var.s set and readonly?])
AT_KEYWORDS([libxdg.sh libxdg xdg_meta constants readonly])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load xdg	## Load libdl.sh and libxdg.sh or die.
atlocal_check_constants xdg		## Perform check for libxdg.sh.
], 0, [dnl				## And the winner is…
], [dnl
])
AT_CLEANUP

dnl
dnl Check if the functions reported by »xdg_meta get apis list« (for all API
dnl versions) indicate usage errors (i.e., return 2) when invoked with
dnl insufficient arguments.
dnl
dnl NOTE:   (1)	This test wraps around atlocal_check_function_usage_errors()!
dnl	    (2)	The double brackets within the expected output provide “just
dnl		the right amount” of m4(1) quoting.
dnl
AT_SETUP([libxdg.sh functions indicate usage errors?])
AT_KEYWORDS([libxdg.sh libxdg usage])
AT_CHECK([dnl
set -eu					## Employ strict execution environment
					## to ensure »set -u« resilience.
case :$PATH: in				## Triggered by »check-local:«?
    *:$abs_top_builddir/bin:*)		## Yes, export suitable LSP.
	LIBDL_SH_LIBRARY_PATH=$abs_top_builddir/lib
	LIBDL_SH_LIBEXECDIR=$abs_top_builddir/libexec
	export LIBDL_SH_LIBRARY_PATH LIBDL_SH_LIBEXECDIR
	;;
esac
eval "`libdl-sh load`"; dl_load xdg	## Load libdl.sh and libxdg.sh or die.
atlocal_check_function_usage_errors xdg
					## Perform check for libxdg.sh.
], 0, [dnl				## And the winner is…
xdg_meta([[3]]set,api,0)=0
xdg_meta([[0]])=2
xdg_meta([[1]]1)=2
xdg_regular([[0]])=2
xdg_regular([[1]]1)=2
], [dnl
])
AT_CLEANUP
