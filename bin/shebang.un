#! /bin/sh
#-----------------------------------------------------------------------------
#   shebang			- “Universal” script interpreter
#
#   Copyright © 2020-2022 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2020-05-27
##  CHANGED BY:	ks	2021-04-18	Split awk(1)/nawk(1) alternatives.
##			2021-04-21	Suppress shell error messsages while
##					locating the locator.
##		ks	2022-12-10	Accept inline form only.
##----------------------------------------------------------------------------
##  Initialization:
#-----------------------------------------------------------------------------
command=`basename "$0"`			## Determine command name.

##----------------------------------------------------------------------------
##  Main program:
##----------------------------------------------------------------------------
interp=$1; unset inline args		## Grab inlined interpreter.
until egrep -q '^#! ?'"$0"'[[:space:]]?' -- "$1" 2>/dev/null; do
					## Until interpretee is found do…
    case ${inline-n} in			## Inline form detected?
	y)  args="${args+$args }$1" ;;	## Yes, augment interpreter arguments.
	*)  inline=y		    ;;	## No, consider it detected.
    esac; shift				## Try next argument.
done; case ${inline-n} in		## Inline form detected?
    y)	set $interp ${args-} ${1+"$@"};	## Yes, expand argument and refetch
	interp=$1; shift;;		## interpreter.
    *)	echo "$command: »$1«: Bad “#!” magic!" >&2
	exit 2		;;
esac; for locate in 'command -v' whence which; do
					## Foreach command locator do…
    ($locate $locate) >/dev/null 2>&1 && {
					## Did it locate itself?
	case $interp in			## ## Yes. Provide alternatives…
	    awk)    interps="$interp nawk mawk gawk"	;;
	    nawk)   interps="$interp mawk gawk"		;;
	    *)	    interps=$interp			;;
	esac; for interp in $interps; do
					## Foreach alternative do…
	    interp=`$locate $interp 2>/dev/null` && exec "$interp" ${1+"$@"}
	done				## Interpret script with located alt.
    }
done; exit 127
