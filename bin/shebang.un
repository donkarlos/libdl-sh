#! /bin/sh
#-----------------------------------------------------------------------------
#   shebang			- 'Universal' script interpreter
#
#   Copyright © 2020-2021 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2020-05-27
##  CHANGED BY:	ks	2021-04-18	Split awk(1)/nawk(1) alternatives.
##			2021-04-21	Suppress shell error messsages while
##					locating the locator.
##----------------------------------------------------------------------------
##  Initialization:
#-----------------------------------------------------------------------------
BS=\\ SQ=\'

##----------------------------------------------------------------------------
##  Main program:
##----------------------------------------------------------------------------
eval "`sed '
    1{;/^#/d;};/^#!/!d;s///
    y/	/ /;s/   */ /g;s/^ //;s/ $//;s/'"$SQ"'/&'"$BS$BS"'&&/g
    s/^.*\/\([^/ ][^/ ]*\)/\1/;s/^\([^/ ][^/ ]*\)\/\/*/\1/
    s/^/interp='"$SQ"'/;s/ /'"$SQ"' args='"$SQ"'/;s/$/'"$SQ"'/
    q
' "$1" 2>/dev/null`"			## Split 2nd shebang line into inter-
					## preter's basename and arguments.
for locate in 'command -v' whence which; do
					## Foreach command locator do…
    if ($locate $locate) >/dev/null 2>&1; then
					## Does it locate itself?
	case $interp in			## Yes. Provide alternatives…
	    awk)    interps="$interp nawk mawk gawk"	;;
	    nawk)   interps="$interp mawk gawk"		;;
	    *)	    interps=$interp			;;
	esac
	for interp in $interps; do	## Foreach alternative do…
	    if interp=`$locate $interp 2>/dev/null`; then
					## Could we locate it?
		exec "$interp" $args ${1+"$@"}
	    fi				## Yes, use it to execute script.
	done
    fi
done; exit 127
