#! /bin/sh
#-----------------------------------------------------------------------------
#   stub			- @PACKAGE_TARNAME@ test stub
#
#   Copyright (C) 2016 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2016-05-20
##  CHANGED BY:	ks	2016-05-22	Simplify 'NAME=VALUE' parameter pro-
##					cessing.
##----------------------------------------------------------------------------
##  stub_exit(STATUS)		Stub's exit-time hook
##
##  NOTE:   (1)	Invoked either by preliminary exit trap or by dl_exit().
#-----------------------------------------------------------------------------
stub_exit() {
    chmod -x "$stub_libdl_sh"		## Restore built libdl-sh's per-
}					## missions.

##----------------------------------------------------------------------------
##  Main program:
##----------------------------------------------------------------------------
LC_ALL=C; export LC_ALL			## Avoid locale insanities.
command=`basename "$0"`			## Determine command name.

unset top_srcdir bindir libdir		## Shield from spurious environment.
while test $# -gt 0; do			## Process 'NAME=VALUE' parameters...
    case $1 in
	top_srcdir=*|bindir=*|libdir=*)
	    n=`expr "$1" : '^\([^=]*\)=.*$'`
	    v=`expr "$1" : '^[^=]*=\(.*\)$'`
	    eval "$n"'=$v'; shift	;;
	*=*)
	    echo "$command: $1: Ignored assignment." >&2
	    shift			;;
	--) shift; break		;;
	*)  break			;;
    esac
done; unset n v				## Discard auxiliary variables.

case ${top_srcdir+=}:${libdir+=} in	## Derive $libdir from $top_srcdir?
    =:)	libdir=${top_srcdir}/lib;;	## Yes, do so.
esac

case ${top_srcdir+=}:${bindir+=} in	## Derive $bindir from $top_srcdir?
    =:)	bindir=${top_srcdir}/bin;;	## Yes, do so.
esac

case ${bindir+=} in			## $bindir finally set?
    =)					## Yes...
	stub_libdl_sh=$bindir/libdl-sh
	readonly stub_libdl_sh		## Define built libdl-sh's pathname.
	if test -f "$stub_libdl_sh".un; then
					## Inside libdl-sh's source tree?
	    trap 'stub_exit $?; trap "" 0; exit 127' 0
					## Yes, register preliminary exit trap
	    chmod +x "$stub_libdl_sh"	## and make built libdl-sh executable.
	    PATH=${bindir}:$PATH; export PATH
	    . "${libdir?}"/libdl.sh || exit 127
					## Emulate 'eval "`libdl-sh load`"'.
	    dl_atexit stub_exit		## Register exit-time hook.
	else
	    eval "`libdl-sh load`"	## No, prepare library demand-loading
	fi				## with installed libdl-sh package.
	;;
    *)					## No...
	eval "`libdl-sh load`"		## Prepare library demand-loading
	;;				## with installed libdl-sh package.
esac

case ${libdir+=} in			## 'libdir=...' given?
    =)	dl_meta pre libpath "$libdir"	## Yes, make other built libraries
	;;				## available to dl_load().
esac
unset top_srcdir bindir libdir

test $# -eq 0 || {
    command=$1; shift; . "$command"
}
