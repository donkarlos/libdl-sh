#! /bin/sh
#-----------------------------------------------------------------------------
#   libdl-sh			- Demand-loading library's trusted helper
#
#   Copyright © 2013-2021 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2013-02-12
##  CHANGED BY:	ks	2013-03-06	Attribute this to »libdl.sh«.
##		ks	2015-04-19	Optimize LSP normalization.
##		ks	2017-02-10	Update copyright.
##					Simplify 'load' action.
##					Canonify LSP items in 'path' action.
##		ks	2018-02-26	Add 'exec' action.
##		ks	2020-05-12	Make libdl.sh aware of relocated in-
##					stallations in 'exec' action.
##		ks	2021-05-02	Add command line parsing.
##		ks	2021-05-12	Remove LIBDL_SH_DESTDIR nonsense.
##		ks	2021-06-01	Make libdl-sh(1) the demand-loading
##					library's trusted helper.
##----------------------------------------------------------------------------
##  Initialization:
#-----------------------------------------------------------------------------
case ${LC_ALL+=} in			## Preserve LC_ALL setting…
    =)	lc_all=$LC_ALL	;;
    *)	unset lc_all	;;
esac; LC_ALL=C; export LC_ALL		## …and avoid locale insanities.
command=`basename "$0"`; readonly command
					## Determine command name.
case ${GETOPT_COMPATIBLE+=} in		## Preserve GETOPT_COMPATIBLE and…
    =)	getopt_compatible=$GETOPT_COMPATIBLE	;;
    *)	unset getopt_compatible			;;
esac; case ${POSIXLY_CORRECT+=} in	## POSIXLY_CORRECT settings and…
    =)	posixly_correct=$POSIXLY_CORRECT	;;
    *)	unset posixly_correct			;;
esac; unset GETOPT_COMPATIBLE POSIXLY_CORRECT
					## …make modern getopt(1) behave.

##----------------------------------------------------------------------------
##  include(CONF …)		Parse demand-loading configuration file(s)
##				into list of library search path items
##----------------------------------------------------------------------------
include() {
    local line

    sed '
	y/	/ /;s/   */ /g		## Compress whitespace. Remove leading
	s/^ //;/^#/d;/^$/d		## whitespace, comment/empty lines,
	s/ #.*$//;s/ $//		## and trailing comments/whitespace.
    ' /dev/null ${1+"$@"} 2>/dev/null | while read line
    do					## Foreach configuration line do…
	case "$line" in			## Which kind?
	    'include')			## »include« without argument…
		;;			## …is ignored.
	    'include '*)		## »include« with argument(s)…
		eval "$line"		## …is recursively parsed after ap-
		;;			## plying shell substitutions.
	    *)				## Library search path items…
		eval "echo $line"	## …are echoed with shell substitu-
		;;			## tions applied.
	esac
    done
}

##----------------------------------------------------------------------------
##  libdl_sh_help()		Show help
##
##  Non-local variables:
##	• command	(R) command name
##----------------------------------------------------------------------------
libdl_sh_help() {
    cat <<EOF
Usage: $command [OPTION …] ACTION [ARG …]
Demand-loading library's trusted helper.

Valid options are:
 -h, --help	Show help
 -V, --version	Show version information

Valid actions are:
 load		Print sh(1) command that loads libdl.sh
 path		Print library search path
 exec COMMAND [ARG …]
		Execute COMMAND [ARG …] in suitable environment
 echo NAME …	Print installation path(s) named NAME
EOF
}

##----------------------------------------------------------------------------
##  libdl_sh_version()		Show version and license information
##
##  Non-local variables:
##	• command	(R) command name
##----------------------------------------------------------------------------
libdl_sh_version() {
    cat <<EOF
$command (@PACKAGE_NAME@) @PACKAGE_VERSION@
Copyright © 2013-2021 Das Computerlabor
License GPLv2: GNU GPL version 2 or later
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Please send bug reports to <@PACKAGE_BUGREPORT@>.
EOF
}

##----------------------------------------------------------------------------
##  Main program:
##----------------------------------------------------------------------------
(getopt -T) >/dev/null 2>&1 && {	## What getopt(1) are dealing with?
    echo "$command: Legacy getopt(1) found!" >&2; exit 2
					## Legacy; complain and abort!
} || case $? in
    4)	optstring=hV			## Modern: preset short and long
	longopts=help,version		## option lists.
	;;
    *)	echo "$command: Missing getopt(1)!" >&2
	exit 2				## None at all: complain and abort!
	;;
esac
args=`getopt -n"$command" -o"$optstring" -l"$longopts" -- ${1+"$@"}` || {
					## Options parsed?
    libdl_sh_help >&2; exit 2		## No, show help and abort!
}
eval set shiftee "$args"; unset optstring longopts args
while shift; do				## Process parsed options…
    case $1 in
	-h|--help)	libdl_sh_help   ; exit 0;;
	-V|--version)	libdl_sh_version; exit 0;;
	--)		shift; break		;;
    esac
done; case ${1-usage} in		## Which action?
    load)				## Emit command to load libdl.sh…
	BS=\\ SQ=\'; for item in `	## Is it present on preliminary LSP?
	    IFS=:; echo $LIBDL_SH_LIBRARY_PATH @shlibdir@
	`; do
	    libpn=$item/libdl.sh; test -f "$libpn" && sed '
		s/'"$SQ"'/&'"$BS$BS"'&&/g
		s/^/. '"$SQ"'/;s/$/'"$SQ"' || exit 127/
	    ' <<EOF && exit 0		## Yes, have the application load it.
$libpn
EOF
	done; echo 'exit 127'		## No, abort the application.
	;;
    path)				## Emit library search path (LSP)…
	items= libpath=			## Start with empty LSP.
	for item in `			## Foreach item in environment and…
	    ifs=$IFS; IFS=:; echo $LIBDL_SH_LIBRARY_PATH; IFS=$ifs
	    include ${LIBDL_SH_CONF:+"$LIBDL_SH_CONF"}			\
		    ${HOME:+"$HOME"/.@PACKAGE_TARNAME@.conf}		\
		    @sysconfdir@/@PACKAGE_TARNAME@.conf
	`; do				## …configuration files do…
	    case :$items$libpath in	## Item already seen/on LSP?
		*:$item:*)		## Yes, skip it.
		    ;;
		*)  items=$items$item:	## No, add it to seen items, then
		    item=`		## canonify and append it to LSP.
			cd "$item" 2>/dev/null && /bin/pwd
		    ` && libpath=$libpath$item:
		    ;;
	    esac
	done; echo "$libpath"		## Emit tail-denormalized LSP (i.e.,
	;;				## either empty or with trailing ':',
					## which is what dl_load() needs as it
					## always prepends the LSP to $PATH).
    exec)				## Execute command…
	shift; bindn=`dirname "$0"`; binrn=`cd "$bindn" && /bin/pwd` && {
					## Could we detect this program's
					## real dirname?
	    PATH=$binrn${PATH+:$PATH}; export PATH
					## Yes, augment PSP so that this pro-
					## gram is found by 1st PSP item.
	}; case ${1+_$1} in		## COMMAND given?
	    _?*)			## Yes, restore environment…
		case ${lc_all+=} in
		    =)  LC_ALL=$lc_all
			export LC_ALL		;;
		    *)  unset LC_ALL		;;
		esac; case ${getopt_compatible+=} in
		    =)  GETOPT_COMPATIBLE=$getopt_compatible
			export GETOPT_COMPATIBLE;;
		esac; case ${posixly_correct+=} in
		    =)  POSIXLY_CORRECT=$posixly_correct
			export POSIXLY_CORRECT	;;
		esac; exec "$@"	;;	## …and execute it.
	    *)	exit 127	;;	## No, indicate failure!
	esac
	;;
    echo)				## Emit installation path(s)…
	shift; for name in ${1+"$@"}	## Foreach given NAME do…
	do
	    case $name in
		bindir)	    echo @bindir@	;;
		libdir)	    echo @shlibdir@	;;
		sysconfdir) echo @sysconfdir@	;;
		pkgdatadir) echo @pkgdatadir@	;;
		*)	    exit 1		;;
	    esac			## Emit installation path if name is
	done				## valid, bail out if not.
	;;
    *)
	libdl_sh_help >&2; exit 2
	;;
esac
