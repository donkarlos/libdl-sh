#! /bin/sh
#-----------------------------------------------------------------------------
#   libdl-sh			- libdl.sh Demand-loading helper
#
#   Copyright (C) 2013-2015 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2013-02-12
##  CHANGED BY:	ks	2013-03-06	Attribute this to `libdl.sh'.
##		ks	2015-04-19	Optimize LSP normalization.
##----------------------------------------------------------------------------
##  include(CONF ...)		Parse demand-loading configuration file(s)
##				into list of library search path items
#-----------------------------------------------------------------------------
include() {
    local line

    sed '
	y/	/ /;s/   */ /g		## Compress whitespace. Remove leading
	s/^ //;/^#/d;/^$/d		## whitespace, comment/empty lines,
	s/ #.*$//;s/ $//		## and trailing comments/whitespace.
    ' /dev/null ${1+"$@"} 2>/dev/null | while read line
    do					## Foreach configuration line do...
	case "$line" in			## Which kind?
	    'include')			## `include' without argument...
		;;			## ...is ignored.
	    'include '*)		## `include' with argument(s)...
		eval "$line"		## ...is recursively parsed after ap-
		;;			## plying shell substitutions.
	    *)				## Library search path items...
		eval "echo $line"	## ...are echoed with shell substitu-
		;;			## tions applied.
	esac
    done
}

##----------------------------------------------------------------------------
##  Main program:
##----------------------------------------------------------------------------
case $1 in				## Which action?
    load)				## Emit command to load libdl.sh...
	BS=\\ SQ=\'; for item in `
	    ifs=$IFS; IFS=:; echo $LIBDL_SH_LIBRARY_PATH @shlibdir@; IFS=$ifs
	`				## Foreach item on the preliminary
	do				## library search path (LSP) do...
	    libdl=$item/libdl.sh; test -f "$libdl" && sed '
		s/'"$SQ"'/&'"$BS$BS"'&&/g
		s/^/. '"$SQ"'/;s/$/'"$SQ"' || exit 127/
	    ' <<EOF && exit 0
$libdl
EOF
	done; echo 'exit 127'
	;;
    path)				## Emit library search path (LSP)...
	libpath=			## Start with empty LSP.
	for item in `
	    ifs=$IFS; IFS=:; echo $LIBDL_SH_LIBRARY_PATH; IFS=$ifs
	    include ${LIBDL_SH_CONF+"$LIBDL_SH_CONF"}			\
		    ${HOME:+"$HOME"/.libdl-sh.conf}			\
		    @sysconfdir@/libdl-sh.conf
	`				## Foreach item in user's and system-
	do				## wide configuration do...
	    test -d "$item" && case :$libpath in
		*:$item:*)		## Item exists and already is on LSP?
		    ;;			## Yes, skip it.
		*)			## Item exists yet isn't on LSP?
		    libpath=$libpath$item:
		    ;;			## Append it to path.
	    esac
	done; echo "$libpath"		## Emit tail-denormalized LSP (i.e.,
	;;				## either empty or with trailing ':',
					## which is what dl_load() needs as it
					## always prepends the LSP to $PATH).
    echo)				## Emit installation path(s)...
	shift; for name in ${1+"$@"}	## Foreach given name do...
	do
	    case $name in
		bindir)	    echo @bindir@	;;
		libdir)	    echo @shlibdir@	;;
		sysconfdir) echo @sysconfdir@	;;
		pkgdatadir) echo @pkgdatadir@	;;
		*)	    exit 1		;;
	    esac			## Emit installation path if name is
	done				## valid, bail out if not.
	;;
    *)
	echo "$0: Unknown action \`$1'!" >&2
	exit 2
	;;
esac
