.\"								-*- nroff -*-
.\" libconf.3sh			- libconf(3sh) manual page
.\"
.\" Copyright (C) 2014-2015 Das Computerlabor (DCl-M)
.\"
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public License
.\" as published by the Free Software Foundation; either
.\" version 2.1 of the License, or (at your option) any later version.
.\"
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\"
.\" You should have received a copy of the GNU Lesser General Public License
.\" along with this library; if not, write to the Free Software Founda-
.\" tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
.\"
.\# AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
.\#
.\# WRITTEN BY:	ks	2014-06-09
.\# CHANGED BY:
.\#
.\# NOTE: (1)	Please adjust below date whenever revising the manual page.
.\#		vvvvvv
.TH libconf 3SH 2014-06-09 "@PACKAGE_TARNAME@ @PACKAGE_VERSION@" "Shell Programming"

.SH NAME
conf_has, conf_get, conf_put, conf_getenv \- Process configuration files

.SH SYNOPSIS (OLD API)
\fBdl_load conf\fP

\fBconf_has\fP \fICFPN\fP \fIITEM\fP
.br
\fBconf_get\fB \fICFPN\fP \fIITEM\fP [\fIVALUE\fP]
.br
\fBconf_set\fP \fICFPN\fP \fIITEM\fP \fIVALUE\fP
.br
\fBconf_unset\fP \fICFPN\fP \fIITEM\fP
.br
\fBconf_getenv\fP \fIVARIABLE\fP \fICFPN\fP \fIITEM\fP [\fIVALUE\fP]

.SH SYNOPSIS (NEW API)
\fBdl_load conf\fP
.br
\fBconf_init new\fP

\fBconf_has\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
.br
\fBconf_get\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
.br
\fBconf_put\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
.br
\fBconf_getenv\fP \fIVARIABLE\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...

.SH DESCRIPTION
The configuration file processing library \fBlibconf.sh\fP allows applications
to maintain persistent configuration in files with a format similar to that of
\fBgit-config\fP(1) by getting, setting, or unsetting configuration items.

.SS APIs
The introduction of stacked configuraton space necessitated radical changes
(mostly regarding parameter ordering) to the library's API. Furthermore, the
functionality of old functions \fBconf_set\fP and \fBconf_unset\fP has been
merged into new function \fBconf_put\fP.

To ease migration of applications to the new API offering stacked
configuration space, the library currently allows to initially choose between
old or new API, with the old API being the default (see \fBSYNOPSES\fP).

Note that in some future version, support for the old API will be withdrawn.
Therefore, applications using this library ought to be migrated to the new API
while the old API remains available.

.SH FUNCTIONS
The following paragraphs describe the new API. For a description of the old
API, see section \fBOBSOLETE FUNCTIONS\fP.

.TP
\fBconf_init\fP \fIAPI\fP
Choose between \fBold\fP or \fBnew\fP API (see \fBAPIs\fP).

Note that applications wanting to use the new API must invoke

.in +4
\fBconf_init new\fP
.in -4

(e.g., in their registered load-time hook) before invoking any of the
following functions.

.TP
\fBconf_has\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
Check if \fIITEM\fP exists in stacked configuration space created by file(s)
\fICFPN\fP. Return status \fB0\fP if it does or \fB1\fP otherwise.

.TP
\fBconf_get\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
Get value of \fIITEM\fP in stacked configuration space created by file(s)
\fICFPN\fP (or supply \fIVALUE\fP when given), write it to standard output,
and return status \fB0\fP. If no value was found or supplied, return status
\fB1\fP.

.TP
\fBconf_put\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
If \fIVALUE\fP is given, assign it to \fIITEM\fP (existing or created) in
the topmost file \fICFPN\fP of stacked configuration space, and update that
file if necessary. Otherwise, remove \fIITEM\fP from the topmost file
\fICFPN\fP and update that file if necessary. Return status \fB0\fP on success
or \fB1\fP on any failure.

Beware of the subtle difference between setting \fIITEM\fP to the empty value
and unsetting it:

.in +4
\fBconf_put\fP \fIITEM\fP\fB=\fP \fICFPN\fP
.in -4

does the first, whereas

.in +4
\fBconf_put\fP \fIITEM\fP \fICFPN\fP
.in -4

does the latter.

.TP
\fBconf_getenv\fP \fIVARIABLE\fP \fIITEM\fP[=\fIVALUE\fP] \fICFPN\fP ...
Unless (environment) \fIVARIABLE\fP is set, behave like \fBconf_get\fP.
Otherwise, write ${\fIVARIABLE\fP} to standard output, so that it essentially
overrides \fIITEM\fP's configured value.

.SH SEE ALSO
.BR dl_load (3sh),
.BR git-config (1).

.SH AUTHOR
Karl Schmitz <@PACKAGE_BUGREPORT@>
