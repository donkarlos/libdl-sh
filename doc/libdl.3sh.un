.\"								-*- nroff -*-
.\" libdl.3sh			- libdl(3sh) manual page
.\"
.\" Copyright (C) 2013 Karl Schmitz
.\"
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public License
.\" as published by the Free Software Foundation; either
.\" version 2.1 of the License, or (at your option) any later version.
.\"
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\"
.\" You should have received a copy of the GNU Lesser General Public License
.\" along with this library; if not, write to the Free Software Founda-
.\" tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
.\"
.\" AUTHOR(S):	ks	Karl Schmitz <carolus.faber@googlemail.com>
.\"
.\" WRITTEN BY:	ks	2013-08-17
.\" CHANGED BY:
.\"
.\" NOTE: (1)	Please adjust below date whenever revising the manual page.
.\"		vvvvvv
.TH LIBDL 3SH 2013-08-17 "@PACKAGE_TARNAME@ @PACKAGE_VERSION@" "Shell Programming"

.SH NAME
dl_init, dl_atload, dl_load, dl_atexit, dl_exit \- Demand-load POSIX shell libraries

.SH SYNOPSIS
\fBeval "`libdl-sh load`"\fP

\fBdl_init\fP \fILIBPATH\fP
.br
\fBdl_atload\fP \fIHOOK\fP
.br
\fBdl_load\fP \fILIB\fP ...
.br
\fBdl_atexit\fP \fIHOOK\fP
.br
\fBdl_exit\fP [\fISTATUS\fP=$?]

.SH DESCRIPTION
The demand-loading library \fBlibdl.sh\fP and its helper \fBlibdl-sh\fP are the
core of @PACKAGE_TARNAME@'s shell library demand-loading mechanism. After the
demand-loading library itself has been loaded into the application with
\fBlibdl-sh\ load\fP (see \fBSYNOPSIS\fP above) and initialized the library
search path by parsing its configuration, more libraries may be loaded by
invoking \fBdl_load\fP.

Applications having private library directories may augment the library search
path by invoking \fBdl_init\fP before loading more libraries.

Applications and/or libraries may also register load-time hooks (i.e.,
functions invoked after succesfully loading a library) as well as exit-time
hooks (i.e., functions invoked before ultimately terminating execution) with
\fBdl_atload\fP and \fBdl_atexit\fP, respectively.

Applications and/or libraries terminate execution by either \fBexit\fPing or
invoking \fBdl_exit\fP, thereby triggering invocation of registered exit-time
hooks.

.SH FUNCTIONS
.TP
\fBdl_init\fP \fILIBPATH\fP
Prepend \fILIBPATH\fP, a colon-separated list of library search path items
(i.e., directories containing demand-loadable libraries) to the library search
path maintained by \fBlibdl.sh\fP.

Applications may invoke \fBdl_init\fP to augment the library search path with
private library directories. They should do so only once and before invoking
\fBdl_load\fP to load more libraries.

.TP
\fBdl_atload\fP \fIHOOK\fP
Register load-time \fIHOOK\fP by pushing it onto the stack of load-time hooks
maintained by \fBlibdl.sh\fP.

After \fBdl_load\fP succesfully loads some library \fILIB\fP, all registered
load-time hooks are invoked in LRFI (last-registered first-invoked) order,
with \fILIB\fP as the only argument.

If some load-time hook fails (i.e., returns non-zero status), \fBdl_load\fP
terminates execution by invoking \fBdl_exit\fP with the status returned by the
failing hook.

.TP
\fBdl_load\fP \fILIB\fP ...
Demand-load each given shell library \fILIB\fP into the application by looking
for \fBlib\fP\fILIB\fP\fB.sh\fP along the library search path and sourcing the
first one found. If \fILIB\fP can't be loaded (either because it isn't found
or its initialization commands fail), the application is terminated with
\fBdl_exit\ 127\fP, thereby invoking registered exit-time hooks. 

.TP
\fBdl_atexit\fP \fIHOOK\fP
Register exit-time \fIHOOK\fP by pushing it onto the stack of exit-time hooks
maintained by \fBlibdl.sh\fP.

.TP
\fBdl_exit\fP [\fISTATUS\fP=$?]
Terminate execution by invoking registered exit-time hooks and \fBexit\fPing
with \fISTATUS\fP. All registered exit-time hooks are invoked in LRFI
(last-registered first-invoked) order with \fISTATUS\fP as the only argument;
their return status is ignored by \fBdl_exit\fP.

.SH TRAPS
In order to have "na√Øve" applications benefit from \fBlibdl.sh\fP's exit-time
hook mechanism, the demand-loading library changes the exit trap with

.in +4
\fBtrap 'dl_exit $?' 0\fP
.in -4

so that execution may be terminated with either \fBexit\fP or \fBdl_exit\fP.

Consequently, applications as well as demand-loadable libraries mustn't change
the exit trap and instead register appropriate exit-time hooks. Note, however,
that applications remain free to catch signals as they see fit.

.SH NAMING CONVENTIONS
In order to avoid confusion (e.g., spurious overloading of functions),
demand-loadable libraries ought to adhere to the following naming conventions:
.IP 1. 3
All symbols defined in the global scope (e.g., functions, global variables,
etc.) must match the modern RE \fB^\fP\fILIB\fP\fB(_[A-Za-z09-9_]+)?$\fP (see
.BR regex (7)
for further details). This naturally implies that \fILIB\fP itself must match
the modern RE \fB^[A-Za-z][A-Za-z0-9]*$\fP. 
.IP 2.
Exceptions to the above rule ought to be rare and must be properly documented.
.IP 3.
No naming conventions are imposed on symbols defined in local scopes (e.g.,
local variables).

.SH SEE ALSO
.BR libdl-sh (1),
.BR libdl-sh.conf (5),
.BR regex (7).

.SH AUTHOR
Karl Schmitz <@PACKAGE_BUGREPORT@>
