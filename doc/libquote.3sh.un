.\"								-*- nroff -*-
.\" libquote.3sh		- libquote(3sh) manual page
.\"
.\" Copyright (C) 2015-2016 Das Computerlabor (DCl-M)
.\"
.\" This library is free software; you can redistribute it and/or
.\" modify it under the terms of the GNU Lesser General Public License
.\" as published by the Free Software Foundation; either
.\" version 2.1 of the License, or (at your option) any later version.
.\"
.\" This library is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" Lesser General Public License for more details.
.\"
.\" You should have received a copy of the GNU Lesser General Public License
.\" along with this library; if not, write to the Free Software Founda-
.\" tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
.\"
.\# AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
.\#
.\# WRITTEN BY:	ks	2015-12-29
.\# CHANGED BY:	ks	2016-05-21	Withdraw 'quote_meta get apis' brief
.\#					format.
.\#
.\# NOTE: (1)	Please adjust below date whenever revising the manual page.
.\#		vvvvvv
.TH libquote 3SH 2016-05-21 "@PACKAGE_TARNAME@ @PACKAGE_VERSION@" "Shell Programming"

.SH NAME
quote_sh, quote_command, quote_grep, quote_egrep, quote_sed, quote_meta
\- String quoting

.SH SYNOPSIS
\fBdl_load quote\fP

\fBquote_sh\fP \fISTRING\fP
.br
\fBquote_command\fP \fICOMMAND\fP [\fIARGUMENT\fP|\fIREDIRECTION\fP ...]
.br
\fBquote_grep\fP \fISTRING\fP
.br
\fBquote_egrep\fP \fISTRING\fP
.br
\fBquote_sed\fP \fISTRING\fP [\fIDELIMITER\fP=/]
.br
\fBquote_meta\fP \fIMETA\fP [\fIARG\fP ...]

.SH DESCRIPTION
The string quoting library \fBlibquote.sh\fP allows applications to properly
quote arbitrary strings for POSIX shells, \fBgrep\fP(1) variants, and
\fBsed\fP(1).

.SH FUNCTIONS
.TP 4
\fBquote_sh\fP \fISTRING\fP
Quote \fISTRING\fP for POSIX shells and write that to standard output.

.TP
\fBquote_command\fP \fICOMMAND\fP [\fIARGUMENT\fP|\fIREDIRECTION\fP ...]
Quote POSIX shell \fICOMMAND\fP, its \fIARGUMENT\fPs and \fIREDIRECTION\fPs
and write that to standard output, so that it may be \fBeval\fPuated by a
POSIX shell.

.TP
\fBquote_grep\fP \fISTRING\fP
Quote \fISTRING\fP for use as \fBgrep\fP(1) search string, i.e. so that all
characters special in "obsolete"/"basic" REs (see \fBregex\fP(7)) are quoted
with backslashes, and write that to standard output.

.TP
\fBquote_egrep\fP \fISTRING\fP
Quote \fISTRING\fP for use as \fBegrep\fP(1) search string, i.e. so that all
characters special in "modern"/"extended" REs (see \fBregex\fP(7)) are quoted
with backslashes, and write that to standard output.

.TP
\fBquote_sed\fP \fISTRING\fP [\fIDELIMITER\fP=/]
Quote \fISTRING\fP for use as \fBsed\fP(1) search string, i.e. so that all
characters special in "obsolete"/"basic" REs as well as the search pattern
delimiter are quoted with backslashes, and write that to standard output.

Without \fIDELIMITER\fP, the standard search pattern delimiter '/' is assumed;
for constructing \fBsed\fP(1) commands with non-standard \fIDELIMITER\fPs, it
may be specified explicitly.

Note that this function may also be used to quote search strings for
\fBed\fP(1) scripts.

.TP
\fBquote_meta\fP \fIMETA\fP [\fIARG\fP ...]
Perform one of \fBlibquote.sh\fP's meta operations. These allow to inquire
certain library internals in a controlled manner. Currently, the following
meta operations are implemented:
.RS 4
.TP 4
\fBget apis\fP [\fIFORMAT\fP=api [\fISEDEX\fP]]
Inquire information about available API versions and write them to standard
output. The information written depends on the output \fIFORMAT\fP:
.RS 4
.IP \(em 2
\fBapi\fP (the default format) represents each API version by a line
containing \fIVERSION\fP.

.IP \(em
\fBfull\fP represents each function within each API version by a line of three
colon-separated fields: \fIVERSION\fP, \fISIGNATURE\fP, and \fIARGCS\fP,
where the second has the format \fINAME\fP\fB(\fP\fIARGS\fP\fB)\fP and the
latter is a (possibly open) range of valid $# values.

For example, for API 0, \fBquote_grep\fP(3sh) and \fBquote_sed\fP(3sh) would
be represented by the following two lines:

.in +4
\fB0:quote_grep(STRING):1\fP
.br
\fB0:quote_sed(STRING [DELIMITER=/]):1-2\fP
.in -4

.IP \(em
\fBlist\fP is similar to \fBfull\fP, except that \fB(\fP\fIARGS\fP\fB)\fP in
the second field is omitted (i.e., just the function name is shown)
.RE

.RS 4
For output formats \fBfull\fP and \fBlist\fP, the resulting output format may
be further tailored by \fISEDEX\fP, a sequence of \fBsed\fP(1) commands. Thus,
if you want to know which API versions (analogous to output format \fBapi\fP)
of \fBlibquote.sh\fP provide \fBquote_sh\fP(3sh), you'd invoke:

.in +4
\fBquote_meta get apis list '/:quote_sh:/!d;s/:.*$//'\fP
.in -4
.RE

.TP
\fBget api\fP
Inquire selected API version and write it to standard output.

.SH EXAMPLES
To exactly \fBgrep\fP(1) those lines within \fIPATHNAME\fP that start with
$pattern (whether it contains special characters or not), you'd invoke:

.in +4
\fBgrep '^'"`quote_grep "$pattern"`"\fP \fIPATHNAME\fP
.in -4

To do the same with \fBsed\fP(1), you'd invoke

.in +4
\fBsed '/^'"`quote_sed "$pattern"`"'/!d'\fP \fIPATHNAME\fP
.in -4

instead.

.SH SEE ALSO
.BR grep (1),
.BR sed (1),
.BR dl_load (3sh),
.BR regex (7).

.SH AUTHOR
Karl Schmitz <@PACKAGE_BUGREPORT@>
