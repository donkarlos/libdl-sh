#! /bin/sh ##
#-----------------------------------------------------------------------------
#   libsession.sh		- Session management library
#
#   Copyright Â© 2017-2021 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2017-10-19
##  CHANGED BY:	ks	2020-05-12	Limit valid 'meta session' operations.
##					Make 'meta get apis FORMAT' properly
##					handle namespace rule-exempted names.
##		ks	2021-05-01	'set -u'-harden session_meta().
##		ks	2021-05-08	Make 'session_meta get apis' sed(1)
##					expr. labels portable.
##		ks	2021-05-15	Prepare for multiple API versions.
##----------------------------------------------------------------------------
##  Global variables:
#-----------------------------------------------------------------------------
session_package=@PACKAGE_TARNAME@	## Define source package name and
session_version=@PACKAGE_VERSION@	## version.
session_api=0				## Preset sole API version and
session_ro=,api,			## freeze it!
readonly session_package session_version session_api

##----------------------------------------------------------------------------
##  session_meta(META [ARG ...]) Perform META operation (with ARGs)
##----------------------------------------------------------------------------
session_meta() {
    local mp=session_			## Set meta prefix.

    case ${2+=}${1+$1-}${2-} in		## Which META operation?
	=get-apis)			## Inquire APIs...
	    local sx ms=\;
	    local fa='/^a'"$ms"'/!d;s///' da='s/([^)'"$ms"'(]*)//'	\
		  ff='/^F'"$ms"'/{;s///;t2'"$NL"'};/^f'"$ms"'/!d;s///'	\
		  fr='/^R'"$ms"'/{;s///;t2'"$NL"'};/^r'"$ms"'/!d;s///'	\
		  p2=';s/'"$ms"'/&'"$mp"'/;:2'
	    case ${3-api} in		## Which format?
		api)	sx="$fa"			;;
		full)	sx="$ff$p2${4+$NL$4}"		;;
		list)	sx="$ff$p2$NL$da${4+;$4}"	;;
		r/o)	sx="$fr$p2${4+$NL$4}"		;;
		*)	return 1			;;
	    esac
	    sed "$sx" <<EOF
a${ms}0
f${ms}0${ms}meta(META [ARG ...])${ms}2-4
EOF
	    ;;
	=get-package|=get-version|=get-api)
					## Inquire internal variable...
	    eval 'case ${'"$mp$2"'+=} in
		=)  echo "$'"$mp$2"'"	;;
		*)  return 1		;;
	    esac'
	    ;;
	=set-*)				## Set internal variable once...
	    case ${4+4}${3+=}$2 in	## Usage OK?
		=api)	${mp}meta get apis | fgrep -qxe "$3"
			;;		## Yes, try to validate API version.
		*)	return 2	## No, indicate abuse!
			;;
	    esac && eval 'case ${'"$mp$2"'+=$'"$mp$2"'}$'"$mp"'ro in
		=$3,*)	return 0	## Variable still settable?
			;;		## Maybe, but idempotence is OK.
		=*,$2,*)return 1	## No, indicate failure!
			;;
		*)  	'"$mp$2"'=$3 '"$mp"'ro=$'"$mp"'ro$2,; readonly '"$mp$2"'
			;;		## Yes, set and freeze it.
	    esac'
	    ;;
	=session-init|=session-load|=session-dump|=session-exit)
	    :				## Session init/load/dump/exit...
	    ;;				## ...is a no-op.
	*)  return 2			## Anything else...
	    ;;				## ...is abuse!
    esac
}
