#! /bin/sh ##
#-----------------------------------------------------------------------------
#   libemit.sh			- Message emission library
#
#   Copyright Â© 2013-2021 Das Computerlabor (DCl-M)
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <ks@computerlabor.org>
##
##  WRITTEN BY:	ks	2013-02-12
##  CHANGED BY:	ks	2016-05-21	Implement meta operations.
##		ks	2016-05-24	Add 'meta get package/version'.
##					Use 'meta get apis' separator ';'.
##		ks	2017-01-15	Update copyright.
##					Add 'meta session *'.
##		ks	2020-05-03	Make 'meta get apis FORMAT' properly
##					handle namespace rule-exempted names.
##		ks	2020-05-12	Limit valid 'meta session' operations.
##		ks	2021-05-01	'set -u'-harden emit_meta().
##		ks	2021-05-08	Make 'emit_meta get apis' sed(1) expr.
##					labels portable.
##		ks	2021-05-15	Prepare for multiple API versions.
##					Use dl_readonly() to freeze variables.
##		ks	2021-05-16	'set -u'-harden emit_set_head().
##----------------------------------------------------------------------------
##  Global variables:
#-----------------------------------------------------------------------------
emit_package=@PACKAGE_TARNAME@		## Define source package name and
emit_version=@PACKAGE_VERSION@		## version.
emit_heads=:
readonly emit_package emit_version emit_api; unset emit_ro emit_api
					## Discard spurious environment.

##----------------------------------------------------------------------------
##  emit_meta(META [ARG ...])	Perform META operation (with ARGs)
##----------------------------------------------------------------------------
emit_meta() {
    local mp=emit_			## Set meta prefix.

    case ${2+=}${1+$1-}${2-} in		## Which META operation?
	=get-apis)			## Inquire APIs...
	    local sx ms=\;
	    local fa='/^a'"$ms"'/!d;s///' da='s/([^)'"$ms"'(]*)//'	\
		  ff='/^F'"$ms"'/{;s///;t2'"$NL"'};/^f'"$ms"'/!d;s///'	\
		  fr='/^R'"$ms"'/{;s///;t2'"$NL"'};/^r'"$ms"'/!d;s///'	\
		  p2=';s/'"$ms"'/&'"$mp"'/;:2'
	    case ${3-api} in		## Which format?
		api)	sx="$fa"			;;
		full)	sx="$ff$p2${4+$NL$4}"		;;
		list)	sx="$ff$p2$NL$da${4+;$4}"	;;
		r/o)	sx="$fr$p2${4+$NL$4}"		;;
		*)	return 1			;;
	    esac
	    sed "$sx" <<EOF
a${ms}0
f${ms}0${ms}meta(META [ARG ...])${ms}2-4
f${ms}0${ms}set_head(LEVEL HEAD)${ms}2
f${ms}0${ms}get_head(LEVEL)${ms}1
F${ms}0${ms}emit(LEVEL MESSAGE ...)${ms}2-
EOF
	    ;;
	=get-package|=get-version|=get-api)
					## Inquire internal variable...
	    eval 'case ${'"$mp$2"'+=} in
		=)  echo "$'"$mp$2"'"	;;
		*)  return 1		;;
	    esac'
	    ;;
	=set-*)				## Set internal variable once...
	    case ${4+4}${3+=}$2 in	## Usage OK?
		=api)	${mp}meta get apis | fgrep -qxe "$3"
			;;		## Yes, try to validate API version.
		*)	return 2	## No, indicate abuse!
			;;
	    esac && dl_readonly emit "$2" "$3"
	    ;;
	=session-init|=session-load|=session-dump|=session-exit)
	    :				## Session init/load/dump/exit...
	    ;;				## ...is a no-op.
	*)  return 2			## Anything else...
	    ;;				## ...is abuse!
    esac
}

##----------------------------------------------------------------------------
##  emit_set_head(LEVEL HEAD)	Set LEVEL's emit head to HEAD
##----------------------------------------------------------------------------
emit_set_head() {
    case ${3+3}${2+=} in		## Usage OK?
	=)  eval 'emit_head_'"$1"'=$2' && case $emit_heads in
		*:$1:*)				;;
		*)  emit_heads=$emit_heads$1:	;;
	    esac
	    ;;
	*)  return 2			## No, indicate abuse!
	    ;;
    esac
}

##----------------------------------------------------------------------------
##  emit_get_head(LEVEL)	Get LEVEL's emit head
##----------------------------------------------------------------------------
emit_get_head() {
    case $emit_heads in
	*:$1:*)	eval 'echo "$emit_head_'"$1"'"'	;;
	*)	return 1			;;
    esac
}

##----------------------------------------------------------------------------
##  emit(LEVEL MESSAGE ...)	Emit message at LEVEL
##----------------------------------------------------------------------------
emit() {
    local l="$1"; shift			## Fetch level.

    case $emit_heads in
	*:$l:*)	eval 'echo "$emit_head_'"$l"'$*"'	;;
	*)	echo "$*"				;;
    esac
}

##----------------------------------------------------------------------------
##  Initialization:
##----------------------------------------------------------------------------
dl_readonly emit api 0			## Set sole API version once.
