#! /bin/sh ##
#-----------------------------------------------------------------------------
#   libquote.sh			- String quoting library
#
#   Copyright (C) 2013 Karl Schmitz
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Lesser General Public License
#   as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Lesser General Public License for more details.
#
#   You should have received a copy of the GNU Lesser General Public License
#   along with this library; if not, write to the Free Software Founda-
#   tion, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
##
##  AUTHOR(S):	ks	Karl Schmitz <carolus.faber@googlemail.com>
##
##  WRITTEN BY:	ks	2013-02-13
##  CHANGED BY:
##
##  NOTE:   (1)	To avoid cluttering code, this library is exempted from need-
##		ing namespace prefixes for its special character and portable
##		character range definitions.
##----------------------------------------------------------------------------
##  Define special characters:
#-----------------------------------------------------------------------------
BQ=\` DQ=\" SQ=\' BS=\\ CS='#' DS=\$ QB=\` QE=\' CR=`printf '\r'` NL='
'

##----------------------------------------------------------------------------
##  Global variables:
##----------------------------------------------------------------------------
quote_sh_sedex="s/$SQ/$SQ$BS$BS$SQ$SQ/g;s/^_/$SQ/;s/$DS/$SQ/"

##----------------------------------------------------------------------------
##  quote_sh(STRING)		Quote STRING for sh(1)
##----------------------------------------------------------------------------
quote_sh () {
    case $BASH in
	?*) echo \'${1//\'/\'\\\'\'}\'		;;
	*)  echo "_$1" | sed "$quote_sh_sedex"	;;
    esac
}

##----------------------------------------------------------------------------
##  quote_command(COMMAND [ARGUMENT|REDIRECTION ...])
##				Quote sh(1) command
##----------------------------------------------------------------------------
quote_command () {
    local cmd="$1" arg; shift		## Fetch command.

    case $BASH in			## Append each redirection/argument...
	?*) for arg in ${1+"$@"}; do case $arg in
		*\<*|*\>*)
		    cmd="$cmd $arg"					;;
		*)  cmd="$cmd "\'${arg//\'/\'\\\'\'}\'			;;
	    esac; done	;;
	*)  for arg in ${1+"$@"}; do case $arg in
		*\<*|*\>*)
		    cmd="$cmd $arg"					;;
		*)  cmd="$cmd `echo "_$arg" | sed "$quote_sh_sedex"`"	;;
	    esac; done	;;
    esac

    echo "$cmd"				## Emit quoted command.
}

##----------------------------------------------------------------------------
##  quote_grep(STRING)		Quote STRING for grep(1)
##----------------------------------------------------------------------------
quote_grep () {
    echo "_$1" | sed 's/^_//;s/\([]^\.*$[]\)/\\\1/g'
}

##----------------------------------------------------------------------------
##  quote_egrep(STRING)		Quote STRING for egrep(1)
##----------------------------------------------------------------------------
quote_egrep () {
    echo "_$1" | sed 's/^_//;s/\([]^\.(|)?*+{}$[]\)/\\\1/g'
}

##----------------------------------------------------------------------------
##  quote_sed(STRING [DELIMITER=/])
##				Quote STRING for sed(1)
##----------------------------------------------------------------------------
quote_sed () {
    echo "_$1" | sed 's/^_//;s/\([]'"${2-/}"'^\.*$[]\)/\\\1/g'
}
